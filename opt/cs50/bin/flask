#!/usr/local/bin/python3

import sys
import os
import subprocess
import termcolor


def main():

    # If $FLASK_APP isn't set, check for application.py (for backwards compatibility), else implicitly default to app.py
    if os.getenv('FLASK_APP') is None:
        if os.path.isfile('./application.py'):
            os.environ['FLASK_APP'] = 'application.py'
        else:
            os.environ['FLASK_APP'] = 'app.py'

    # Enable development mode by default
    os.environ['FLASK_ENV'] = 'development'

    # But not debug mode
    os.environ['FLASK_DEBUG'] = '0'

    # Construct flask command
    command = ['flask']

    host = '0.0.0.0' # default host
    port = 8080 # default port
    if (sys.argv[1] == 'run' and len(sys.argv) == 2):
        command.extend(['run', f'--host={host}', f'--port={port}', '--reload'])
    else:
        command.extend(sys.argv[1:])
        host = [host for host in command if 'host' in host][0].split('=')[1]
        port = [port for port in command if 'port' in port][0].split('=')[1]

    codespace_name = os.getenv('CODESPACE_NAME')
    if (codespace_name is not None):
        msg = f"\nFlask App running on https://{codespace_name}-{port}.githubpreview.dev\n"
        print(termcolor.colored(msg, 'green'))
    
    subprocess.check_call(command)


if __name__ == '__main__':
    main()