#!/usr/local/bin/python3

import argparse
import os
import subprocess
import sys
import termcolor

DEFAULT_HOST = '0.0.0.0'
DEFAULT_PORT = 8080
EXECUTABLE = '/usr/local/bin/http-server'

def main():

    # Construct http-server command
    args, extra_args = parse_args(sys.argv[1:])
    host = args.a or DEFAULT_HOST
    port = args.p or DEFAULT_PORT
    autoIndex = args.i or 'false' 
    command = [EXECUTABLE]
    
    if len(sys.argv) == 1:
        command.extend([f'-a={host}', f'-p={port}', '-c-1', '--cors', f'-i {autoIndex}', '--no-dotfiles'])
        os.system(f'fuser -k {port}/tcp') # Kill any process listing on the specified port
        display_codespace_url(port)

    # Start http-server
    command.extend(extra_args)
    subprocess.run(command)


def parse_args(args):
    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument(
        '-a',
        nargs='?'
    )
    parser.add_argument(
        '-p',
        nargs='?'
    )
    parser.add_argument(
        '-i',
        nargs='?',
        const='true'
    )
    return parser.parse_known_args(args)


def display_codespace_url(port):
    codespace_name = os.getenv('CODESPACE_NAME')
    if (codespace_name is not None):
        msg = f"\nhttp-server running on https://{codespace_name}-{port}.githubpreview.dev\n"
        print(termcolor.colored(msg, 'green'))


if __name__ == '__main__':
    main()